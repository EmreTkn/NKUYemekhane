// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Core.Entities.DinnerTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DinnerTimes");
                });

            modelBuilder.Entity("Core.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DinnerTimeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FoodFirst")
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodFourth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodSecond")
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodThird")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Holiday")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SchoolNameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DinnerTimeId");

                    b.HasIndex("SchoolNameId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("Core.Entities.Order.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderAggregateId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderAggregateId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Core.Entities.Order.OrderAggregate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuyerEmail")
                        .HasColumnType("TEXT");

                    b.Property<long>("OrderDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Subtotal")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("OrderAggregates");
                });

            modelBuilder.Entity("Core.Entities.SchoolName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SchoolNames");
                });

            modelBuilder.Entity("Core.Entities.Menu", b =>
                {
                    b.HasOne("Core.Entities.DinnerTime", "DinnerTime")
                        .WithMany()
                        .HasForeignKey("DinnerTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.SchoolName", "SchoolName")
                        .WithMany()
                        .HasForeignKey("SchoolNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Order.MenuItem", b =>
                {
                    b.HasOne("Core.Entities.Order.OrderAggregate", null)
                        .WithMany("Menus")
                        .HasForeignKey("OrderAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Core.Entities.Order.MenuItemOrdered", "MenuOrdered", b1 =>
                        {
                            b1.Property<int>("MenuItemId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("DinnerTime")
                                .HasColumnType("TEXT");

                            b1.Property<int>("MenuDay")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("MenuMonth")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("MenuName")
                                .HasColumnType("TEXT");

                            b1.Property<int>("MenuYear")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("SchoolName")
                                .HasColumnType("TEXT");

                            b1.HasKey("MenuItemId");

                            b1.ToTable("MenuItems");

                            b1.WithOwner()
                                .HasForeignKey("MenuItemId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
